name: Tests

on:
  # Allow to manually trigger through github API
  workflow_dispatch:

  # Triggers with push to main
  push:
    branches:
      - master
      - development

  # Triggers with push to a PR aimed at main
  pull_request:
    branches:
      - master
      - development

  schedule:
    # Every day at 7AM UTC
    - cron: '0 07 * * *'

env:

  package-name: dehb
  test-dir: tests
  extra-requires: "[dev]"  # "" for no extra_requires

  # Arguments used for pytest
  pytest-args: >-
    --durations=20
    -v

jobs:

  # General unit tests
  source-test:
    name: ${{ matrix.python-version }}-${{ matrix.os }}

    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash # Default to using bash on all

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install ${{ env.package-name }}
      run: |
        python -m pip install --upgrade pip
        python -m pip install wheel
        python -m pip install -e ".${{ env.extra-requires }}"

    - name: Store git status
      id: status-before
      shell: bash
      run: |
        echo "::set-output name=BEFORE::$(git status --porcelain -b)"

    - name: Tests
      run: |
        pytest ${{ env.pytest-args }} ${{ env.test-dir }}

    - name: Coveralls GitHub Action
      uses: coverallsapp/github-action@v2
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.10'

    - name: Remove Coverage file
      uses: JesseTG/rm@v1.0.3
      with:
        path: coverage.lcov

    - name: Check for files left behind by test
      run: |
        before="${{ steps.status-before.outputs.BEFORE }}"
        after="$(git status --porcelain -b)"
        if [[ "$before" != "$after" ]]; then
            echo "git status from before: $before"
            echo "git status from after: $after"
            echo "Not all generated files have been deleted!"
            exit 1
        fi